{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { handleKeydown } from './tools/handleKey';\nimport { addLineNumber, line_counter } from './tools/numberTextArea';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let CodeTextAreaComponent = /*#__PURE__*/(() => {\n  class CodeTextAreaComponent {\n    constructor() {\n      this.form = new FormGroup({});\n      this.fileReader = new FileReader();\n    }\n\n    ngOnInit() {\n      this.$data?.subscribe(data => {\n        if (data.charAt(0) == ':') {\n          const value = data.substring(1);\n          const {\n            textArea\n          } = this.form.controls;\n          textArea.setValue(value);\n        }\n      });\n      this.form = new FormGroup({\n        file: new FormControl('', []),\n        textArea: new FormControl('', []),\n        lineCount: new FormControl('', [])\n      });\n\n      this.fileReader.onload = () => {\n        const {\n          textArea\n        } = this.form.controls;\n        const valueFromFile = ('' + this.fileReader.result).replaceAll('\\r\\n', '\\n');\n        textArea.setValue(valueFromFile);\n        line_counter();\n      };\n\n      addLineNumber('lineCounter', 'codeEditor');\n    }\n\n    fileChanged(e) {\n      let file = e.target.files[0];\n      this.fileReader.readAsText(file);\n    } // test(){\n    //   console.log('Hola')\n    // }\n\n\n    keyDown(event) {\n      const {\n        textArea\n      } = this.form.controls;\n      handleKeydown(event, textArea);\n      line_counter();\n    }\n\n    sendData() {\n      const {\n        textArea\n      } = this.form.controls;\n\n      if (this.$data) {\n        this.$data.emit(textArea.value);\n      }\n    }\n\n  }\n\n  CodeTextAreaComponent.ɵfac = function CodeTextAreaComponent_Factory(t) {\n    return new (t || CodeTextAreaComponent)();\n  };\n\n  CodeTextAreaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CodeTextAreaComponent,\n    selectors: [[\"app-code-text-area\"]],\n    inputs: {\n      $data: \"$data\"\n    },\n    decls: 16,\n    vars: 1,\n    consts: [[1, \"col-12\"], [1, \"row\", 3, \"formGroup\"], [1, \"col-12\", \"mt-3\"], [1, \"row\"], [1, \"col-9\", \"p-0\"], [\"type\", \"file\", \"accept\", \".txt\", \"formControlName\", \"file\", 1, \"form-control\", 3, \"change\"], [1, \"col-3\", \"p-0\", \"ps-5\"], [1, \"btn\", \"btn-warning\", \"fw-bold\", \"w-100\", \"text-center\", \"ps-0\", \"pe-0\", 3, \"click\"], [1, \"col-1\", \"p-0\"], [\"id\", \"lineCounter\", \"wrap\", \"off\", \"readonly\", \"\", 1, \"text-right\", \"w-100\"], [1, \"col-11\", \"p-0\"], [\"id\", \"codeEditor\", \"spellcheck\", \"false\", \"formControlName\", \"textArea\", \"wrap\", \"off\", 1, \"w-100\", 3, \"keydown\"]],\n    template: function CodeTextAreaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"input\", 5);\n        i0.ɵɵlistener(\"change\", function CodeTextAreaComponent_Template_input_change_5_listener($event) {\n          return ctx.fileChanged($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function CodeTextAreaComponent_Template_button_click_7_listener() {\n          return ctx.sendData();\n        });\n        i0.ɵɵtext(8, \" Ejecutar \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 3)(11, \"div\", 8)(12, \"textarea\", 9);\n        i0.ɵɵtext(13, \"1.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"textarea\", 11);\n        i0.ɵɵlistener(\"keydown\", function CodeTextAreaComponent_Template_textarea_keydown_15_listener($event) {\n          return ctx.keyDown($event);\n        });\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"input[type=file][_ngcontent-%COMP%]{font-family:monospace;background-color:var(--background-color-1);border:none;color:var(--color-0)}input[type=file][_ngcontent-%COMP%]::-webkit-file-upload-button{background-color:var(--background-color-2);font-style:oblique;font-weight:700;color:var(--color-1)}input[type=file][_ngcontent-%COMP%]::file-selector-button{background-color:var(--background-color-2);font-style:oblique;font-weight:700;color:var(--color-1)}#codeEditor[_ngcontent-%COMP%], #lineCounter[_ngcontent-%COMP%]{height:75vh;resize:none;font-size:1em;line-height:1.2;outline:none}#lineCounter[_ngcontent-%COMP%]{padding-top:1rem;border-color:transparent;overflow-y:hidden;box-shadow:none;text-align:right;background-color:var(--background-color-1);color:var(--color-0)}#codeEditor[_ngcontent-%COMP%]{padding-top:.92rem;padding-left:1rem;background-color:var(--background-color-0);border-color:var(--background-color-0);color:var(--color-1)}\"]\n  });\n  return CodeTextAreaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}